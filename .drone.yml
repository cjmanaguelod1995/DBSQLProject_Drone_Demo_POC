kind: pipeline
type: docker
name: Clean Build and Deploy

steps:    
  - name: clean
    image: mcr.microsoft.com/dotnet/sdk:latest
    commands:
      - dotnet clean DBProject_Drone_Demo.sln

  - name: build
    image: mcr.microsoft.com/dotnet/core/sdk:latest
    commands:
      - dotnet build DBProject_Drone_Demo.sln
   
  - name: Use Powershell
    image: mcr.microsoft.com/azure-powershell:latest
    commands:
      - ~/.Azure/AzureRmContext.json:/root/.Azure/AzureRmContext.json -v ~/.Azure/TokenCache.dat:/root/.Azure/TokenCache.dat mcr.microsoft.com/azure-powershell pwsh

  - name: publish
    image: mcr.microsoft.com/dotnet/core/sdk:latest
    commands:
      - apt-get update -y
      - apt-get upgrade -y
      - apt-get install zip unzip -y
      - dotnet publish DBProject_Drone_Demo.sln --output /drone/src/publish/
      - cd /drone/src/publish
      - zip -r output_file.zip *
      - cp -r output_file.zip /drone/src
     
  - name: Deploy to Azure SQL Database 
    image: sijaymm/sqlpackage
    environment:
      SQL_SERVER_NAME:
        from_secret: SQL_SERVER_NAME
      DATABASE_NAME:
        from_secret: DATABASE_NAME
      USERNAME:
        from_secret: USERNAME
      PASSWORD:
        from_secret: PASSWORD
      SOURCE_FILE:
        from_secret: SOURCE_FILE
    commands:
      - sqlpackage /a:Publish /p:VerifyDeployment=True /p:CommandTimeout=0 /p:DatabaseServiceObjective=P2 /p:AllowIncompatiblePlatform=True /tsn:tcp:$SQL_SERVER_NAME /tdn:$DATABASE_NAME /tu:$USERNAME /tp:$PASSWORD /sf:/drone/src/DBProject_Drone_Demo.build/bin/Debug/netstandard2.0/DBProject_Drone_Demo.build.dacpac
      

      

trigger:
  branch:
    - develop
